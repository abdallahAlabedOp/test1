function cov_vx5soo6jj(){var path="/home/abdullahalabed/test1/bakEnd/schema/CommentSchema.mjs";var hash="5e1c86da06eb9ad1f48665ebe651d279a5a1db3d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/abdullahalabed/test1/bakEnd/schema/CommentSchema.mjs",statementMap:{"0":{start:{line:4,column:22},end:{line:29,column:1}}},fnMap:{},branchMap:{},s:{"0":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5e1c86da06eb9ad1f48665ebe651d279a5a1db3d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_vx5soo6jj=function(){return actualCoverage;};}return actualCoverage;}cov_vx5soo6jj();import Sequelize from"sequelize";const commentSchema=(cov_vx5soo6jj().s[0]++,{id:{type:Sequelize.INTEGER,autoIncrement:true,primaryKey:true,allowNull:false},name:{type:Sequelize.STRING,allowNull:false,required:true},body:{type:Sequelize.STRING,allowNull:false,required:true},postId:{type:Sequelize.INTEGER,reference:{key:"id",model:"posts"}},userId:{type:Sequelize.INTEGER,reference:{key:"id",model:"users"}}});export default commentSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnRTY2hlbWEubWpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsImNvbW1lbnRTY2hlbWEiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsInByaW1hcnlLZXkiLCJhbGxvd051bGwiLCJuYW1lIiwiU1RSSU5HIiwicmVxdWlyZWQiLCJib2R5IiwicG9zdElkIiwicmVmZXJlbmNlIiwia2V5IiwibW9kZWwiLCJ1c2VySWQiXSwibWFwcGluZ3MiOiI2cEJBZVk7eUZBZlosTUFBT0EsQ0FBQUEsU0FBUCxLQUFzQixXQUF0QixDQUdBLEtBQU1DLENBQUFBLGFBQWEseUJBQUcsQ0FDcEJDLEVBQUUsQ0FBRSxDQUNGQyxJQUFJLENBQUVILFNBQVMsQ0FBQ0ksT0FEZCxDQUVGQyxhQUFhLENBQUUsSUFGYixDQUdGQyxVQUFVLENBQUUsSUFIVixDQUlGQyxTQUFTLENBQUUsS0FKVCxDQURnQixDQU9wQkMsSUFBSSxDQUFFLENBQ0pMLElBQUksQ0FBRUgsU0FBUyxDQUFDUyxNQURaLENBRUpGLFNBQVMsQ0FBRSxLQUZQLENBR0pHLFFBQVEsQ0FBRSxJQUhOLENBUGMsQ0FZcEJDLElBQUksQ0FBRSxDQUNKUixJQUFJLENBQUVILFNBQVMsQ0FBQ1MsTUFEWixDQUVKRixTQUFTLENBQUUsS0FGUCxDQUdKRyxRQUFRLENBQUUsSUFITixDQVpjLENBaUJwQkUsTUFBTSxDQUFFLENBQ05ULElBQUksQ0FBRUgsU0FBUyxDQUFDSSxPQURWLENBRU5TLFNBQVMsQ0FBRSxDQUFFQyxHQUFHLENBQUUsSUFBUCxDQUFhQyxLQUFLLENBQUUsT0FBcEIsQ0FGTCxDQWpCWSxDQXFCcEJDLE1BQU0sQ0FBRSxDQUNOYixJQUFJLENBQUVILFNBQVMsQ0FBQ0ksT0FEVixDQUVOUyxTQUFTLENBQUUsQ0FBRUMsR0FBRyxDQUFFLElBQVAsQ0FBYUMsS0FBSyxDQUFFLE9BQXBCLENBRkwsQ0FyQlksQ0FBSCxDQUFuQixDQTJCQSxjQUFlZCxDQUFBQSxhQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tIFwic2VxdWVsaXplXCI7XG5cblxuY29uc3QgY29tbWVudFNjaGVtYSA9IHtcbiAgaWQ6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICBhdXRvSW5jcmVtZW50OiB0cnVlLFxuICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgfSxcbiAgbmFtZToge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgfSxcbiAgYm9keToge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgfSxcbiAgcG9zdElkOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgcmVmZXJlbmNlOiB7IGtleTogXCJpZFwiLCBtb2RlbDogXCJwb3N0c1wiIH0sXG4gIH0sXG4gIHVzZXJJZDoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgIHJlZmVyZW5jZTogeyBrZXk6IFwiaWRcIiwgbW9kZWw6IFwidXNlcnNcIiB9LFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tbWVudFNjaGVtYTtcbiJdfQ==